{"ast":null,"code":"import { CONSTANTS } from \"../actions\";\nlet listID = 2;\nlet cardID = 3;\nconst initialState = [{\n  title: 'TO DO',\n  id: 0,\n  cards: [{\n    id: 0,\n    text: 'we created a static list and a static card'\n  }, {\n    id: 1,\n    text: 'we used a mix between material'\n  }]\n}, {\n  title: 'DOING',\n  id: 1,\n  cards: [{\n    id: 0,\n    text: 'Hi'\n  }, {\n    id: 1,\n    text: 'we used a mix between material'\n  }, {\n    id: 2,\n    text: 'what?'\n  }]\n}];\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // 새로운 리스트 생성\n    case CONSTANTS.ADD_LIST:\n      const newList = {\n        id: listID,\n        title: action.payload,\n        cards: []\n      };\n      listID += 1;\n      return [...state, newList];\n    // 새로운 카드 생성 \n\n    case CONSTANTS.ADD_CARD:\n      const newCard = {\n        id: cardID,\n        text: action.payload.text\n      };\n      cardID += 1;\n      const newState = state.map(list => {\n        // 해당 list 일 때\n        if (list.id === action.payload.listID) {\n          return { ...list,\n            cards: [...list.cards, newCard]\n          };\n        } else {\n          // 해당 list 아닐 떄, 기존값 반환\n          return list;\n        }\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","map":{"version":3,"sources":["/Users/yeeun/Trello/trello/src/reducers/listReducer.js"],"names":["CONSTANTS","listID","cardID","initialState","title","id","cards","text","listReducer","state","action","type","ADD_LIST","newList","payload","ADD_CARD","newCard","newState","map","list"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AAEA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,CAAb;AAEA,MAAMC,YAAY,GAAG,CAChB;AACIC,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,KAAK,EAAE,CACH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE;AAAf,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE;AAAf,GAFG;AAHX,CADgB,EASjB;AACIH,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,KAAK,EAAE,CACH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE;AAAf,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE;AAAf,GAFG,EAGH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE;AAAf,GAHG;AAHX,CATiB,CAArB;;AAoBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAKX,SAAS,CAACY,QAAf;AACI,YAAMC,OAAO,GAAG;AACZR,QAAAA,EAAE,EAAEJ,MADQ;AAEZG,QAAAA,KAAK,EAAEM,MAAM,CAACI,OAFF;AAGZR,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKAL,MAAAA,MAAM,IAAI,CAAV;AACA,aAAO,CAAC,GAAGQ,KAAJ,EAAWI,OAAX,CAAP;AAEJ;;AACA,SAAKb,SAAS,CAACe,QAAf;AACI,YAAMC,OAAO,GAAG;AACZX,QAAAA,EAAE,EAAEH,MADQ;AAEZK,QAAAA,IAAI,EAAEG,MAAM,CAACI,OAAP,CAAeP;AAFT,OAAhB;AAIAL,MAAAA,MAAM,IAAI,CAAV;AAEA,YAAMe,QAAQ,GAAGR,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AAC/B;AACA,YAAGA,IAAI,CAACd,EAAL,KAAYK,MAAM,CAACI,OAAP,CAAeb,MAA9B,EAAsC;AAClC,iBAAO,EACH,GAAGkB,IADA;AAEHb,YAAAA,KAAK,EAAE,CAAC,GAAGa,IAAI,CAACb,KAAT,EAAgBU,OAAhB;AAFJ,WAAP;AAIH,SALD,MAKO;AACH;AACA,iBAAOG,IAAP;AACH;AACJ,OAXgB,CAAjB;AAYA,aAAOF,QAAP;;AAEJ;AAAS,aAAOR,KAAP;AAjCb;AAmCH,CApCD;;AAsCA,eAAeD,WAAf","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nlet listID = 2;\nlet cardID = 3;\n\nconst initialState = [\n     { \n         title: 'TO DO', \n         id: 0, \n         cards: [ \n             { id: 0, text: 'we created a static list and a static card' }, \n             { id: 1, text: 'we used a mix between material' } \n        ] \n    }, \n    { \n        title: 'DOING', \n        id: 1, \n        cards: [ \n            { id: 0, text: 'Hi' }, \n            { id: 1, text: 'we used a mix between material' }, \n            { id: 2, text: 'what?' } \n        ] \n    } \n];\n\nconst listReducer = (state = initialState, action) => {\n    switch(action.type) {\n        // 새로운 리스트 생성\n        case CONSTANTS.ADD_LIST:\n            const newList = {\n                id: listID,\n                title: action.payload,\n                cards: []\n            };\n            listID += 1;\n            return [...state, newList];\n\n        // 새로운 카드 생성 \n        case CONSTANTS.ADD_CARD:\n            const newCard = {\n                id: cardID,\n                text: action.payload.text\n            };\n            cardID += 1;\n\n            const newState = state.map(list => {\n                // 해당 list 일 때\n                if(list.id === action.payload.listID) {\n                    return {\n                        ...list,\n                        cards: [...list.cards, newCard]\n                    }\n                } else {\n                    // 해당 list 아닐 떄, 기존값 반환\n                    return list\n                }\n            })\n            return newState;\n\n        default: return state;\n    }\n};\n\nexport default listReducer;"]},"metadata":{},"sourceType":"module"}