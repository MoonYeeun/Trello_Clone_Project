{"ast":null,"code":"import { CONSTANTS } from \"../actions\";\nimport { act } from \"react-dom/test-utils\";\nlet listID = 2;\nlet cardID = 3;\nconst initialState = [{\n  title: 'TO DO',\n  id: 0,\n  cards: [{\n    id: 0,\n    text: 'we created a static list and a static card',\n    body: ''\n  }, {\n    id: 1,\n    text: 'we used a mix between material',\n    body: ''\n  }]\n}, {\n  title: 'DOING',\n  id: 1,\n  cards: [{\n    id: 0,\n    text: 'Hi',\n    body: ''\n  }, {\n    id: 1,\n    text: 'we used a mix between material',\n    body: ''\n  }, {\n    id: 2,\n    text: 'what?',\n    body: ''\n  }]\n}];\n\nconst listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // 새로운 리스트 생성\n    case CONSTANTS.ADD_LIST:\n      console.log('reducer list');\n      const newList = {\n        id: listID,\n        title: action.payload,\n        cards: []\n      };\n      listID += 1;\n      return [...state, newList];\n    // 새로운 카드 생성 \n\n    case CONSTANTS.ADD_CARD:\n      console.log('reducer card');\n      const newCard = {\n        id: cardID,\n        text: action.payload.text,\n        body: ''\n      };\n      cardID += 1;\n      const newState = state.map(list => {\n        // 해당 list 일 때\n        if (list.id === action.payload.listID) {\n          return { ...list,\n            cards: [...list.cards, newCard]\n          };\n        } else {\n          // 해당 list 아닐 떄, 기존값 반환\n          return list;\n        }\n      });\n      return newState;\n    // card 수정\n\n    case CONSTANTS.EDIT_CARD:\n      console.log('card id ' + action.payload.cardID);\n      const editState = state.map(list => {\n        if (list.id === action.payload.listID) {\n          return { ...list,\n            cards: list.cards.map(item => item.id === action.payload.cardID ? { ...item,\n              text: action.payload.text\n            } : item)\n          };\n        } else return list;\n      }); // const editState = state.map(list => {\n      //     // 해당 list 일 때\n      //     if(list.id === action.payload.listID) {\n      //         return {\n      //             ...list,\n      //             cards: editCard\n      //         }\n      //     } else {\n      //         // 해당 list 아닐 떄, 기존값 반환\n      //         return list\n      //     }\n      // })\n\n      return editState;\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","map":{"version":3,"sources":["/Users/yeeun/Trello/trello/src/reducers/listReducer.js"],"names":["CONSTANTS","act","listID","cardID","initialState","title","id","cards","text","body","listReducer","state","action","type","ADD_LIST","console","log","newList","payload","ADD_CARD","newCard","newState","map","list","EDIT_CARD","editState","item"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,CAAb;AAEA,MAAMC,YAAY,GAAG,CAChB;AACIC,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,KAAK,EAAE,CACH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE,4CAAf;AAA6DC,IAAAA,IAAI,EAAE;AAAnE,GADG,EAEH;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE,gCAAf;AAAiDC,IAAAA,IAAI,EAAE;AAAvD,GAFG;AAHX,CADgB,EASjB;AACIJ,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,KAAK,EAAE,CACH;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE,IAAf;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GADG,EAEH;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE,gCAAf;AAAiDC,IAAAA,IAAI,EAAE;AAAvD,GAFG,EAGH;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAHG;AAHX,CATiB,CAArB;;AAoBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAKb,SAAS,CAACc,QAAf;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAMC,OAAO,GAAG;AACZX,QAAAA,EAAE,EAAEJ,MADQ;AAEZG,QAAAA,KAAK,EAAEO,MAAM,CAACM,OAFF;AAGZX,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKAL,MAAAA,MAAM,IAAI,CAAV;AACA,aAAO,CAAC,GAAGS,KAAJ,EAAWM,OAAX,CAAP;AAEJ;;AACA,SAAKjB,SAAS,CAACmB,QAAf;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAMI,OAAO,GAAG;AACZd,QAAAA,EAAE,EAAEH,MADQ;AAEZK,QAAAA,IAAI,EAAEI,MAAM,CAACM,OAAP,CAAeV,IAFT;AAGZC,QAAAA,IAAI,EAAE;AAHM,OAAhB;AAKAN,MAAAA,MAAM,IAAI,CAAV;AAEA,YAAMkB,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AAC/B;AACA,YAAGA,IAAI,CAACjB,EAAL,KAAYM,MAAM,CAACM,OAAP,CAAehB,MAA9B,EAAsC;AAClC,iBAAO,EACH,GAAGqB,IADA;AAEHhB,YAAAA,KAAK,EAAE,CAAC,GAAGgB,IAAI,CAAChB,KAAT,EAAgBa,OAAhB;AAFJ,WAAP;AAIH,SALD,MAKO;AACH;AACA,iBAAOG,IAAP;AACH;AACJ,OAXgB,CAAjB;AAYA,aAAOF,QAAP;AAEJ;;AACA,SAAKrB,SAAS,CAACwB,SAAf;AACIT,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaJ,MAAM,CAACM,OAAP,CAAef,MAAxC;AAEA,YAAMsB,SAAS,GAAGd,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AAChC,YAAGA,IAAI,CAACjB,EAAL,KAAYM,MAAM,CAACM,OAAP,CAAehB,MAA9B,EAAsC;AAClC,iBAAO,EACH,GAAGqB,IADA;AAEHhB,YAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAAL,CAAWe,GAAX,CAAeI,IAAI,IACrBA,IAAI,CAACpB,EAAL,KAAYM,MAAM,CAACM,OAAP,CAAef,MAA3B,GAAoC,EAChC,GAAGuB,IAD6B;AAEhClB,cAAAA,IAAI,EAAEI,MAAM,CAACM,OAAP,CAAeV;AAFW,aAApC,GAGIkB,IAJF;AAFJ,WAAP;AASH,SAVD,MAUO,OAAOH,IAAP;AACV,OAZiB,CAAlB,CAHJ,CAgBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAOE,SAAP;;AAEJ;AAAS,aAAOd,KAAP;AAnEb;AAqEH,CAtED;;AAwEA,eAAeD,WAAf","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport { act } from \"react-dom/test-utils\";\n\nlet listID = 2;\nlet cardID = 3;\n\nconst initialState = [\n     { \n         title: 'TO DO', \n         id: 0, \n         cards: [ \n             { id: 0, text: 'we created a static list and a static card', body: ''}, \n             { id: 1, text: 'we used a mix between material', body: ''} \n        ] \n    }, \n    { \n        title: 'DOING', \n        id: 1, \n        cards: [ \n            { id: 0, text: 'Hi', body: ''}, \n            { id: 1, text: 'we used a mix between material', body: ''}, \n            { id: 2, text: 'what?', body: ''} \n        ] \n    } \n];\n\nconst listReducer = (state = initialState, action) => {\n    switch(action.type) {\n        // 새로운 리스트 생성\n        case CONSTANTS.ADD_LIST:\n            console.log('reducer list');\n            const newList = {\n                id: listID,\n                title: action.payload,\n                cards: []\n            };\n            listID += 1;\n            return [...state, newList];\n\n        // 새로운 카드 생성 \n        case CONSTANTS.ADD_CARD:\n            console.log('reducer card');\n            const newCard = {\n                id: cardID,\n                text: action.payload.text,\n                body: ''\n            };\n            cardID += 1;\n\n            const newState = state.map(list => {\n                // 해당 list 일 때\n                if(list.id === action.payload.listID) {\n                    return {\n                        ...list,\n                        cards: [...list.cards, newCard]\n                    }\n                } else {\n                    // 해당 list 아닐 떄, 기존값 반환\n                    return list\n                }\n            })\n            return newState;\n        \n        // card 수정\n        case CONSTANTS.EDIT_CARD:\n            console.log('card id ' + action.payload.cardID);\n\n            const editState = state.map(list => {\n                if(list.id === action.payload.listID) {\n                    return {\n                        ...list,\n                        cards: list.cards.map(item =>\n                             item.id === action.payload.cardID ? {\n                                 ...item,\n                                 text: action.payload.text\n                             } : item\n                        )\n                    }\n                } else return list\n            })\n            // const editState = state.map(list => {\n            //     // 해당 list 일 때\n            //     if(list.id === action.payload.listID) {\n            //         return {\n            //             ...list,\n            //             cards: editCard\n            //         }\n            //     } else {\n            //         // 해당 list 아닐 떄, 기존값 반환\n            //         return list\n            //     }\n            // })\n            return editState;\n\n        default: return state;\n    }\n};\n\nexport default listReducer;"]},"metadata":{},"sourceType":"module"}