{"ast":null,"code":"var _jsxFileName = \"/Users/yeeun/Trello/trello/src/Components/TrelloCard.js\";\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Textarea from 'react-textarea-autosize';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport './Trello.css';\nimport TodoModal from './TodoModal';\nimport Modal from './Modal';\nimport { editCard } from '../actions';\nimport { useDispatch } from 'react-redux';\n\nconst TrelloCard = ({\n  text,\n  body\n}) => {\n  const [modal, setModal] = useState(false);\n  const [isEdit, setEdit] = useState(false);\n  const [title, setUpdate] = useState(text);\n\n  const handleModal = () => {\n    setModal(!modal);\n  }; // 수정 모드  \n\n\n  const editMode = () => {\n    const titleText = text;\n    const dispatch = useDispatch();\n\n    const handleTitleUpdate = ({\n      target\n    }) => {\n      setUpdate(target.value);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: styles.Card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Textarea, {\n      style: styles.Textarea,\n      placeholder: titleText,\n      autoFocus: true,\n      value: title,\n      onChange: handleTitleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.formButtonGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: styles.Button,\n      variant: \"contained\",\n      onClick: () => {\n        setEdit(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"SAVE\"), /*#__PURE__*/React.createElement(Icon, {\n      onClick: () => {\n        setEdit(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"close\")));\n  }; // 읽기 모드 \n\n\n  const readMode = () => {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: styles.CardContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"todo-text\",\n      onClick: () => handleModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, text)), modal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TodoModal, {\n      handleModal: handleModal,\n      title: text,\n      body: body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"update\",\n      onClick: () => {\n        setEdit(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"\\u270E\")));\n  };\n\n  return isEdit === false ? readMode() : editMode();\n};\n\nconst styles = {\n  CardContainer: {\n    marginBottom: 10\n  },\n  openFormButtonGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    borderRadius: 3,\n    height: 36,\n    width: 272,\n    paddingLeft: 10\n  },\n  Card: {\n    overflow: \"visible\",\n    minHeight: 80,\n    minWidth: 272,\n    padding: \"6px 8px 2px\"\n  },\n  Textarea: {\n    resize: \"none\",\n    overflow: \"hidden\",\n    outline: \"none\",\n    border: \"none\",\n    width: \"100%\"\n  },\n  Button: {\n    color: \"white\",\n    backgroundColor: \"#5aac44\",\n    marginBottom: 10\n  },\n  Icon: {\n    marginLeft: 8,\n    cursor: \"pointer\"\n  },\n  formButtonGroup: {\n    marginTop: 8,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\nexport default TrelloCard;","map":{"version":3,"sources":["/Users/yeeun/Trello/trello/src/Components/TrelloCard.js"],"names":["React","useState","Card","Icon","Button","Textarea","Typography","CardContent","TodoModal","Modal","editCard","useDispatch","TrelloCard","text","body","modal","setModal","isEdit","setEdit","title","setUpdate","handleModal","editMode","titleText","dispatch","handleTitleUpdate","target","value","styles","formButtonGroup","readMode","CardContainer","marginBottom","openFormButtonGroup","display","alignItems","cursor","borderRadius","height","width","paddingLeft","overflow","minHeight","minWidth","padding","resize","outline","border","color","backgroundColor","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'; \nimport Card from '@material-ui/core/Card'; \nimport Icon from '@material-ui/core/Icon'\nimport Button from '@material-ui/core/Button'\nimport Textarea from 'react-textarea-autosize'\nimport Typography from '@material-ui/core/Typography'; \nimport CardContent from '@material-ui/core/CardContent';\nimport './Trello.css';\nimport TodoModal from './TodoModal';\nimport Modal from './Modal';\nimport { editCard } from '../actions'\nimport { useDispatch } from 'react-redux';\n\nconst TrelloCard = ({ text, body }) => {\n    const [modal, setModal] = useState(false); \n    const [isEdit, setEdit] = useState(false); \n    const [title, setUpdate] = useState(text); \n\n    const handleModal = () => {\n        setModal(!modal)\n    }\n\n    // 수정 모드  \n    const editMode = () => {\n        const titleText = text;\n        const dispatch = useDispatch()\n\n        const handleTitleUpdate = ({target}) => {\n            setUpdate(target.value)\n        }\n\n        return ( \n            <div> \n                <Card style={styles.Card}> \n                    <Textarea style={styles.Textarea} placeholder={titleText} \n                    autoFocus value={title}\n                    onChange={handleTitleUpdate}/> \n                </Card> \n                <div style={styles.formButtonGroup}> \n                    <Button style={styles.Button} variant=\"contained\"\n                    onClick={() => {setEdit(false)}}>\n                        SAVE\n                    </Button> \n                    <Icon onClick={() => {setEdit(false)}}>close</Icon> \n                </div> \n            </div>\n        );\n    } \n    // 읽기 모드 \n    const readMode = () => {\n        return (\n            <Card style = {styles.CardContainer}>\n                <div className=\"todo-item\">\n                    <CardContent className=\"todo-text\" onClick={() => handleModal()}>\n                        <Typography gutterBottom>{text}</Typography>\n                    </CardContent>\n                    {\n                        modal && (\n                            <Modal>\n                                <TodoModal handleModal={handleModal} title={text} body={body}></TodoModal>\n                            </Modal>\n                        )\n                    }\n                    <div className=\"update\" onClick={() => {setEdit(true)}}>&#9998;</div> \n                </div>\n            </Card>\n        );\n    }\n\n    return (\n        isEdit === false ? readMode() : editMode()\n    )\n}\n\nconst styles = { \n    CardContainer: {\n        marginBottom: 10\n    },\n\n    openFormButtonGroup:{ \n        display:\"flex\", \n        alignItems:\"center\", \n        cursor:\"pointer\", \n        borderRadius:3, \n        height:36, \n        width:272, \n        paddingLeft:10 \n    }, \n    Card: {\n        overflow:\"visible\", \n        minHeight:80, \n        minWidth:272, \n        padding:\"6px 8px 2px\"\n    },\n    Textarea: { \n        resize:\"none\", \n        overflow:\"hidden\", \n        outline:\"none\", \n        border:\"none\", \n        width:\"100%\" \n    }, \n    Button: {\n        color:\"white\", \n        backgroundColor: \"#5aac44\",\n        marginBottom: 10\n    },\n    Icon: {\n        marginLeft:8, \n        cursor:\"pointer\"\n    },\n    formButtonGroup:{ \n        marginTop:8, \n        display:\"flex\", \n        alignItems:\"center\" \n    }\n}\nexport default TrelloCard;"]},"metadata":{},"sourceType":"module"}