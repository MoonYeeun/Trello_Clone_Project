{"ast":null,"code":"import { CONSTANTS } from \"../actions\";\nlet listID = 2;\nlet cardID = 3;\nconst initialState = {\n  title: '',\n  description: ''\n};\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // 새로운 리스트 생성\n    case CONSTANTS.ADD_LIST:\n      console.log('reducer list');\n      const newList = {\n        id: listID,\n        title: action.payload,\n        cards: []\n      };\n      listID += 1;\n      return [...state, newList];\n    // 새로운 카드 생성 \n\n    case CONSTANTS.ADD_CARD:\n      console.log('reducer card');\n      const newCard = {\n        id: cardID,\n        text: action.payload.text\n      };\n      cardID += 1;\n      const newState = state.map(list => {\n        // 해당 list 일 때\n        if (list.id === action.payload.listID) {\n          return { ...list,\n            cards: [...list.cards, newCard]\n          };\n        } else {\n          // 해당 list 아닐 떄, 기존값 반환\n          return list;\n        }\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;","map":{"version":3,"sources":["/Users/yeeun/Trello/trello/src/reducers/modalReducer.js"],"names":["CONSTANTS","listID","cardID","initialState","title","description","modalReducer","state","action","type","ADD_LIST","console","log","newList","id","payload","cards","ADD_CARD","newCard","text","newState","map","list"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AAEA,IAAIC,MAAM,GAAG,CAAb;AACA,IAAIC,MAAM,GAAG,CAAb;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAKT,SAAS,CAACU,QAAf;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEb,MADQ;AAEZG,QAAAA,KAAK,EAAEI,MAAM,CAACO,OAFF;AAGZC,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKAf,MAAAA,MAAM,IAAI,CAAV;AACA,aAAO,CAAC,GAAGM,KAAJ,EAAWM,OAAX,CAAP;AAEJ;;AACA,SAAKb,SAAS,CAACiB,QAAf;AACIN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAMM,OAAO,GAAG;AACZJ,QAAAA,EAAE,EAAEZ,MADQ;AAEZiB,QAAAA,IAAI,EAAEX,MAAM,CAACO,OAAP,CAAeI;AAFT,OAAhB;AAIAjB,MAAAA,MAAM,IAAI,CAAV;AAEA,YAAMkB,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAI;AAC/B;AACA,YAAGA,IAAI,CAACR,EAAL,KAAYN,MAAM,CAACO,OAAP,CAAed,MAA9B,EAAsC;AAClC,iBAAO,EACH,GAAGqB,IADA;AAEHN,YAAAA,KAAK,EAAE,CAAC,GAAGM,IAAI,CAACN,KAAT,EAAgBE,OAAhB;AAFJ,WAAP;AAIH,SALD,MAKO;AACH;AACA,iBAAOI,IAAP;AACH;AACJ,OAXgB,CAAjB;AAYA,aAAOF,QAAP;;AAEJ;AAAS,aAAOb,KAAP;AAnCb;AAqCH,CAtCD;;AAwCA,eAAeD,YAAf","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nlet listID = 2;\nlet cardID = 3;\n\nconst initialState = {\n    title: '',\n    description: ''\n};\n\nconst modalReducer = (state = initialState, action) => {\n    switch(action.type) {\n        // 새로운 리스트 생성\n        case CONSTANTS.ADD_LIST:\n            console.log('reducer list');\n            const newList = {\n                id: listID,\n                title: action.payload,\n                cards: []\n            };\n            listID += 1;\n            return [...state, newList];\n\n        // 새로운 카드 생성 \n        case CONSTANTS.ADD_CARD:\n            console.log('reducer card');\n            const newCard = {\n                id: cardID,\n                text: action.payload.text\n            };\n            cardID += 1;\n\n            const newState = state.map(list => {\n                // 해당 list 일 때\n                if(list.id === action.payload.listID) {\n                    return {\n                        ...list,\n                        cards: [...list.cards, newCard]\n                    }\n                } else {\n                    // 해당 list 아닐 떄, 기존값 반환\n                    return list\n                }\n            })\n            return newState;\n\n        default: return state;\n    }\n};\n\nexport default modalReducer;"]},"metadata":{},"sourceType":"module"}