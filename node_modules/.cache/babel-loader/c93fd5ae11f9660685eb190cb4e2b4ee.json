{"ast":null,"code":"var _jsxFileName = \"/Users/yeeun/Trello/trello/src/Components/TrelloCard.js\";\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Textarea from 'react-textarea-autosize';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport './TrelloCard.css';\nimport TodoModal from './TodoModal';\nimport Modal from './Modal';\nimport { editCard, deleteCard } from '../actions';\nimport { useDispatch } from 'react-redux';\n\nconst TrelloCard = ({\n  listID,\n  cardID,\n  text,\n  body\n}) => {\n  const [modal, setModal] = useState(false);\n  const [isEdit, setEdit] = useState(false);\n  const [cardText, setUpdate] = useState(text);\n  const dispatch = useDispatch();\n\n  const handleModal = () => {\n    setModal(!modal);\n  }; // 수정 모드  \n\n\n  const editMode = () => {\n    const titleText = text;\n\n    const handleTitleUpdate = ({\n      target\n    }) => {\n      setUpdate(target.value);\n    };\n\n    const handleEditCard = () => {\n      console.log(cardText);\n\n      if (cardText) {\n        dispatch(editCard({\n          listID,\n          cardID,\n          cardText\n        }));\n        setEdit(false);\n      }\n\n      return;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: styles.Card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Textarea, {\n      style: styles.Textarea,\n      placeholder: titleText,\n      autoFocus: true,\n      value: cardText,\n      onChange: handleTitleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.formButtonGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: styles.Button,\n      variant: \"contained\",\n      onClick: () => handleEditCard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"SAVE\"), /*#__PURE__*/React.createElement(Icon, {\n      onClick: () => {\n        setEdit(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"close\")));\n  }; // 읽기 모드 \n\n\n  const readMode = () => {\n    console.log('ti ', text);\n\n    const handleDeleteCard = () => {\n      console.log('deleteeee');\n      console.log(listID, cardID);\n      dispatch(deleteCard({\n        listID,\n        cardID\n      }));\n    };\n\n    return /*#__PURE__*/React.createElement(Card, {\n      style: styles.CardContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remove\",\n      onClick: () => handleDeleteCard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(CardContent, {\n      className: \"todo-text\",\n      onClick: () => handleModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, text)), modal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TodoModal, {\n      handleModal: handleModal,\n      title: text,\n      body: body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"update\",\n      onClick: () => {\n        setEdit(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"\\u270E\")));\n  };\n\n  return isEdit === false ? readMode() : editMode();\n};\n\nconst styles = {\n  CardContainer: {\n    marginBottom: 10\n  },\n  openFormButtonGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    borderRadius: 3,\n    height: 36,\n    width: 272,\n    paddingLeft: 10\n  },\n  Card: {\n    overflow: \"visible\",\n    minHeight: 80,\n    minWidth: 272,\n    padding: \"6px 8px 2px\"\n  },\n  Textarea: {\n    resize: \"none\",\n    overflow: \"hidden\",\n    outline: \"none\",\n    border: \"none\",\n    width: \"100%\"\n  },\n  Button: {\n    color: \"white\",\n    backgroundColor: \"#5aac44\",\n    marginBottom: 10\n  },\n  Icon: {\n    marginLeft: 8,\n    cursor: \"pointer\"\n  },\n  formButtonGroup: {\n    marginTop: 8,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\nexport default TrelloCard;","map":{"version":3,"sources":["/Users/yeeun/Trello/trello/src/Components/TrelloCard.js"],"names":["React","useState","Card","Icon","Button","Textarea","Typography","CardContent","TodoModal","Modal","editCard","deleteCard","useDispatch","TrelloCard","listID","cardID","text","body","modal","setModal","isEdit","setEdit","cardText","setUpdate","dispatch","handleModal","editMode","titleText","handleTitleUpdate","target","value","handleEditCard","console","log","styles","formButtonGroup","readMode","handleDeleteCard","CardContainer","marginBottom","openFormButtonGroup","display","alignItems","cursor","borderRadius","height","width","paddingLeft","overflow","minHeight","minWidth","padding","resize","outline","border","color","backgroundColor","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'; \nimport Card from '@material-ui/core/Card'; \nimport Icon from '@material-ui/core/Icon'\nimport Button from '@material-ui/core/Button'\nimport Textarea from 'react-textarea-autosize'\nimport Typography from '@material-ui/core/Typography'; \nimport CardContent from '@material-ui/core/CardContent';\nimport './TrelloCard.css';\nimport TodoModal from './TodoModal';\nimport Modal from './Modal';\nimport { editCard, deleteCard } from '../actions'\nimport { useDispatch } from 'react-redux';\n\nconst TrelloCard = ({ listID, cardID, text, body }) => {\n    const [modal, setModal] = useState(false); \n    const [isEdit, setEdit] = useState(false); \n    const [cardText, setUpdate] = useState(text); \n    const dispatch = useDispatch()\n\n    const handleModal = () => {\n        setModal(!modal)\n    }\n\n    // 수정 모드  \n    const editMode = () => {\n        const titleText = text;\n        \n        const handleTitleUpdate = ({target}) => {\n            setUpdate(target.value)\n        }\n\n        const handleEditCard = () => {\n            console.log(cardText);\n            if(cardText) {\n                dispatch(editCard({listID, cardID, cardText}))\n                setEdit(false)\n            }\n            return;\n        }\n\n        return ( \n            <div> \n                <Card style={styles.Card}> \n                    <Textarea style={styles.Textarea} placeholder={titleText} \n                    autoFocus value={cardText}\n                    onChange={handleTitleUpdate}/> \n                </Card> \n                <div style={styles.formButtonGroup}> \n                    <Button style={styles.Button} variant=\"contained\"\n                    onClick={() => handleEditCard()}>\n                        SAVE\n                    </Button> \n                    <Icon onClick={() => {setEdit(false)}}>close</Icon> \n                </div> \n            </div>\n        );\n    } \n    // 읽기 모드 \n    const readMode = () => {\n\n        console.log('ti ', text);\n\n        const handleDeleteCard = () => {\n            console.log('deleteeee');\n            console.log(listID, cardID);\n            dispatch(deleteCard({listID, cardID}))\n        }\n\n        return (\n            <Card style = {styles.CardContainer}>\n                <div className=\"todo-item\">\n                    <div className=\"remove\" onClick={() => handleDeleteCard()}>&times;</div>\n                    <CardContent className=\"todo-text\" onClick={() => handleModal()}>\n                        <Typography gutterBottom>{text}</Typography>\n                    </CardContent>\n                    {\n                        modal && (\n                            <Modal>\n                                <TodoModal handleModal={handleModal} title={text} body={body}></TodoModal>\n                            </Modal>\n                        )\n                    }\n                    <div className=\"update\" onClick={() => {setEdit(true)}}>&#9998;</div> \n                </div>\n            </Card>\n        );\n    }\n\n    return (\n        isEdit === false ? readMode() : editMode()\n    )\n}\n\nconst styles = { \n    CardContainer: {\n        marginBottom: 10\n    },\n\n    openFormButtonGroup:{ \n        display:\"flex\", \n        alignItems:\"center\", \n        cursor:\"pointer\", \n        borderRadius:3, \n        height:36, \n        width:272, \n        paddingLeft:10 \n    }, \n    Card: {\n        overflow:\"visible\", \n        minHeight:80, \n        minWidth:272, \n        padding:\"6px 8px 2px\"\n    },\n    Textarea: { \n        resize:\"none\", \n        overflow:\"hidden\", \n        outline:\"none\", \n        border:\"none\", \n        width:\"100%\" \n    }, \n    Button: {\n        color:\"white\", \n        backgroundColor: \"#5aac44\",\n        marginBottom: 10\n    },\n    Icon: {\n        marginLeft:8, \n        cursor:\"pointer\"\n    },\n    formButtonGroup:{ \n        marginTop:8, \n        display:\"flex\", \n        alignItems:\"center\" \n    }\n}\n\nexport default TrelloCard;"]},"metadata":{},"sourceType":"module"}